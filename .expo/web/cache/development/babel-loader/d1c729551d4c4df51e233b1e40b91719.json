{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport 'react-native-gesture-handler';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport LogInScreen from \"./screens/LogInScreen\";\nimport Navigation from \"./navigation/Navigation\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProfileScreen from \"./screens/ProfileScreen\";\nvar Tab = createBottomTabNavigator();\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      appIsReady = _useState2[0],\n      setAppIsReady = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLogIn = _useState4[0],\n      setIsLogIn = _useState4[1];\n\n  useEffect(function () {\n    function prepare() {\n      return _regeneratorRuntime.async(function prepare$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(new Promise(function (resolve) {\n                return setTimeout(resolve, 2000);\n              }));\n\n            case 5:\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 10:\n              _context.prev = 10;\n              setAppIsReady(true);\n              return _context.finish(10);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7, 10, 13]], Promise);\n    }\n\n    prepare();\n  }, []);\n\n  if (!isLoadingComplete && appIsReady) {\n    return null;\n  } else {\n    if (isLogIn) {\n      return _jsx(LogInScreen, {});\n    } else {\n      return _jsx(SafeAreaProvider, {\n        children: _jsx(NavigationContainer, {\n          children: _jsxs(Stack.Navigator, {\n            screenOptions: {\n              headerShown: false\n            },\n            children: [_jsx(Stack.Screen, {\n              name: \"log in\",\n              component: LogInScreen\n            }), _jsx(Stack.Screen, {\n              name: \"navigation\",\n              component: Navigation\n            }), _jsx(Stack.Screen, {\n              name: \"HomeProfile\",\n              component: ProfileScreen\n            })]\n          })\n        })\n      });\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/bsosn/OneDrive/Desktop/Expo/instagram/App.js"],"names":["StatusBar","React","useState","useEffect","useContext","SafeAreaProvider","useCachedResources","SplashScreen","NavigationContainer","createBottomTabNavigator","LogInScreen","Navigation","HomeScreen","ProfileScreen","Tab","createStackNavigator","Stack","App","isLoadingComplete","appIsReady","setAppIsReady","isLogIn","setIsLogIn","prepare","preventAutoHideAsync","Promise","resolve","setTimeout","console","warn","headerShown"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAO,8BAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AAGA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AAEA,OAAOC,WAAP;AAEA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;AACA,SAASM,oBAAT,QAAqC,yBAArC;;;AACA,IAAMC,KAAK,GAAGD,oBAAoB,EAAlC;AAEA,eAAe,SAASE,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAGZ,kBAAkB,EAA5C;;AAD4B,kBAGQJ,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,MAGrBiB,UAHqB;AAAA,MAGTC,aAHS;;AAAA,mBAIElB,QAAQ,CAAC,KAAD,CAJV;AAAA;AAAA,MAIrBmB,OAJqB;AAAA,MAIZC,UAJY;;AAQ5BnB,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeoB,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEUhB,YAAY,CAACiB,oBAAb,EAFV;;AAAA;AAAA;AAAA,+CAGU,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,uBAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAd;AAAA,eAAnB,CAHV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKIE,cAAAA,OAAO,CAACC,IAAR;;AALJ;AAAA;AAOIT,cAAAA,aAAa,CAAC,IAAD,CAAb;AAPJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAG,IAAAA,OAAO;AACR,GAbQ,EAaN,EAbM,CAAT;;AAiBA,MAAI,CAACL,iBAAD,IAAsBC,UAA1B,EAAsC;AACpC,WAAO,IAAP;AACD,GAFD,MAEO;AACL,QAAIE,OAAJ,EAAa;AACX,aAAO,KAAC,WAAD,KAAP;AACD,KAFD,MAEO;AACL,aAEE,KAAC,gBAAD;AAAA,kBAEE,KAAC,mBAAD;AAAA,oBAEE,MAAC,KAAD,CAAO,SAAP;AACE,YAAA,aAAa,EAAE;AACbS,cAAAA,WAAW,EAAE;AADA,aADjB;AAAA,uBAMI,KAAC,KAAD,CAAO,MAAP;AAAc,cAAA,IAAI,EAAC,QAAnB;AAA4B,cAAA,SAAS,EAAEpB;AAAvC,cANJ,EAOI,KAAC,KAAD,CAAO,MAAP;AAAc,cAAA,IAAI,EAAC,YAAnB;AAAgC,cAAA,SAAS,EAAEC;AAA3C,cAPJ,EAQI,KAAC,KAAD,CAAO,MAAP;AAAc,cAAA,IAAI,EAAC,aAAnB;AAAiC,cAAA,SAAS,EAAEE;AAA5C,cARJ;AAAA;AAFF;AAFF,QAFF;AAsBD;AACF;AAEF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport 'react-native-gesture-handler';\nimport React, { useState, useEffect, useContext } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport * as SplashScreen from 'expo-splash-screen';\n\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\n\nimport LogInScreen from \"./screens/LogInScreen\";\n\nimport Navigation from \"./navigation/Navigation\";\nimport HomeScreen from \"./screens/HomeScreen\"\nimport ProfileScreen from \"./screens/ProfileScreen\";\n\nconst Tab = createBottomTabNavigator();\nimport { createStackNavigator } from '@react-navigation/stack'\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n\n  const [appIsReady, setAppIsReady] = useState(false);\n  const [isLogIn, setIsLogIn] = useState(false);\n\n\n\n  useEffect(() => {\n    async function prepare() {\n      try {\n        await SplashScreen.preventAutoHideAsync();\n        await new Promise(resolve => setTimeout(resolve, 2000));\n      } catch (e) {\n        console.warn(e);\n      } finally {\n        setAppIsReady(true);\n      }\n    }\n\n    prepare();\n  }, []);\n\n\n\n  if (!isLoadingComplete && appIsReady) {\n    return null;\n  } else {\n    if (isLogIn) {\n      return <LogInScreen />\n    } else {\n      return (\n\n        <SafeAreaProvider>\n       \n          <NavigationContainer>\n            \n            <Stack.Navigator\n              screenOptions={{\n                headerShown: false\n              }}\n            >\n       \n                <Stack.Screen name=\"log in\" component={LogInScreen} />\n                <Stack.Screen name=\"navigation\" component={Navigation} />\n                <Stack.Screen name=\"HomeProfile\" component={ProfileScreen} />\n            </Stack.Navigator>\n            \n          </NavigationContainer>\n \n        </SafeAreaProvider>\n\n      );\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}