{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AntDesign } from '@expo/vector-icons';\nimport * as firebase from 'firebase';\nimport * as Facebook from 'expo-facebook';\nimport auth from '@react-native-firebase/auth';\nimport { styles } from \"../styles/styles\";\nimport apiKeys from \"../config/keys\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LogInScreen = function LogInScreen(_ref) {\n  var navigation = _ref.navigation;\n  LogBox.ignoreLogs(['Setting a timer']);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userToSave = _useState4[0],\n      setUserToSave = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      initializing = _useState6[0],\n      setInitializing = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      createAccoutn = _useState8[0],\n      setCreateAccount = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      name = _useState10[0],\n      onChangeName = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      userName = _useState12[0],\n      onChangeUserName = _useState12[1];\n\n  var _useState13 = useState(\"sosnakrk@gmail.con\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      text = _useState14[0],\n      onChangeText = _useState14[1];\n\n  var _useState15 = useState(\"SuperSecretPassword!\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      password = _useState16[0],\n      onChangePassword = _useState16[1];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      secureEntry = _useState18[0],\n      setSecureEntry = _useState18[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n  }\n\n  useEffect(function () {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(apiKeys.firebaseConfig);\n    } else {\n      firebase.app();\n      var subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\n      return subscriber;\n    }\n  }, []);\n\n  var show = function show() {\n    if (secureEntry) setSecureEntry(false);else setSecureEntry(true);\n  };\n\n  var createUser = function createUser() {\n    firebase.auth().createUserWithEmailAndPassword(text, password).then(function () {\n      if (firebase.auth().currentUser) {\n        var userId = firebase.auth().currentUser.uid;\n\n        if (userId) {\n          firebase.database().ref('users/' + userId).set({\n            firstname: name,\n            email: text,\n            login: userName,\n            password: password,\n            photoURL: false,\n            emailVerified: false,\n            uid: userId,\n            status: true,\n            online: true,\n            description: false,\n            followed: [],\n            followers: [],\n            haveStory: false,\n            userBiogram: '',\n            userWebPage: ''\n          });\n        }\n      }\n\n      LogIn();\n      console.log('User account created & signed in!');\n    }).catch(function (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        console.log('That email address is already in use!');\n      }\n\n      if (error.code === 'auth/invalid-email') {\n        console.log('That email address is invalid!');\n      }\n\n      console.error(error);\n    });\n  };\n\n  var saveToStorage = function saveToStorage(user) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function saveToStorage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(user);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('User', jsonValue));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var LogIn = function LogIn() {\n    firebase.auth().signInWithEmailAndPassword(text, password).then(function (user) {\n      console.log('User account created & signed in!');\n      console.log(user.user.uid);\n      navigation.navigate('navigation', {\n        screen: 'Home'\n      });\n      saveToStorage(user.user);\n    }).catch(function (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        console.log('That email address is already in use!');\n      }\n\n      if (error.code === 'auth/invalid-email') {\n        console.log('That email address is invalid!');\n      }\n\n      console.error(error);\n    });\n  };\n\n  var forgetPass = function forgetPass() {\n    console.log(\"LogIn\");\n  };\n\n  function LogInWithFacebook() {\n    var _await$Expo$Facebook$, _await$Expo$Facebook$2, type, token, credencial;\n\n    return _regeneratorRuntime.async(function LogInWithFacebook$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Expo.Facebook.logInWithReadPermissionsAsync('2808470432706384', {\n              permissions: ['public_profile', \"email\"]\n            }));\n\n          case 2:\n            _await$Expo$Facebook$ = _context2.sent;\n            _await$Expo$Facebook$2 = _slicedToArray(_await$Expo$Facebook$, 2);\n            type = _await$Expo$Facebook$2[0];\n            token = _await$Expo$Facebook$2[1];\n\n            if (type === 'success') {\n              credencial = firebase.auth().FacebookAuthProvider.credencial(token);\n              firebase.auth().signInWithCredencial(credencial).catch(function (error) {\n                console.log(error);\n              });\n            }\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var dontHaveAccount = function dontHaveAccount() {\n    console.log(\"aaa\");\n    setCreateAccount(true);\n  };\n\n  var goBack = function goBack() {\n    setCreateAccount(false);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.headerLogInScreen,\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          style: styles.imgLogInScreen,\n          source: require(\"../assets/images/test.png\")\n        })\n      }), _jsxs(TouchableOpacity, {\n        style: _objectSpread(_objectSpread({}, styles.logButton), {}, {\n          marginBottom: 40\n        }),\n        onPress: LogInWithFacebook,\n        children: [_jsx(AntDesign, {\n          name: \"facebook-square\",\n          size: 20,\n          color: \"white\"\n        }), _jsx(Text, {\n          style: styles.logButtontext,\n          children: \"Continue with Facebook\"\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          width: 250\n        },\n        children: [_jsx(View, {\n          style: {\n            flex: 1,\n            height: 1,\n            backgroundColor: '#E5E8E8'\n          }\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: {\n              width: 50,\n              textAlign: 'center',\n              color: \"#E5E8E8\"\n            },\n            children: \"OR\"\n          })\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            height: 1,\n            backgroundColor: '#E5E8E8'\n          }\n        })]\n      }), createAccoutn ? _jsxs(View, {\n        children: [_jsx(View, {\n          style: styles.textInputLogIn,\n          children: _jsx(TextInput, {\n            placeholder: \"Numer telefonu,nazwa u\\u017Cytkownika\",\n            onChangeText: onChangeText,\n            value: text\n          })\n        }), _jsx(View, {\n          style: styles.textInputLogIn,\n          children: _jsx(TextInput, {\n            placeholder: \"Imi\\u0119 i nazwisko\",\n            onChangeText: onChangeName,\n            value: name\n          })\n        }), _jsx(View, {\n          style: styles.textInputLogIn,\n          children: _jsx(TextInput, {\n            placeholder: \"Nazwa u\\u017Cytkownika\",\n            onChangeText: onChangeUserName,\n            value: userName\n          })\n        }), _jsxs(View, {\n          style: styles.inputpass,\n          children: [_jsx(View, {\n            style: styles.textInputPass,\n            children: _jsx(TextInput, {\n              placeholder: \"Has\\u0142o\",\n              onChangeText: onChangePassword,\n              value: password,\n              secureTextEntry: secureEntry\n            })\n          }), _jsx(View, {\n            style: styles.showButton,\n            children: _jsx(TouchableOpacity, {\n              onPress: show,\n              children: _jsx(Text, {\n                children: \"Poka\\u017C\"\n              })\n            })\n          })]\n        }), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            style: styles.logButton,\n            onPress: createUser,\n            children: _jsx(Text, {\n              style: styles.logButtontext,\n              children: \"Sign up\"\n            })\n          })\n        })]\n      }) : _jsxs(View, {\n        children: [_jsx(View, {\n          style: styles.textInputLogIn,\n          children: _jsx(TextInput, {\n            placeholder: \"Numer telefonu,nazwa u\\u017Cytkownika\",\n            onChangeText: onChangeText,\n            value: text\n          })\n        }), _jsxs(View, {\n          style: styles.inputpass,\n          children: [_jsx(View, {\n            style: styles.textInputPass,\n            children: _jsx(TextInput, {\n              placeholder: \"Has\\u0142o\",\n              onChangeText: onChangePassword,\n              value: password,\n              secureTextEntry: secureEntry\n            })\n          }), _jsx(View, {\n            style: styles.showButton,\n            children: _jsx(TouchableOpacity, {\n              onPress: show,\n              children: _jsx(Text, {\n                children: \"Poka\\u017C\"\n              })\n            })\n          })]\n        }), _jsxs(View, {\n          children: [_jsx(TouchableOpacity, {\n            style: styles.logButton,\n            onPress: LogIn,\n            children: _jsx(Text, {\n              style: styles.logButtontext,\n              children: \"Log in\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.forgot,\n            onPress: forgetPass,\n            children: _jsx(Text, {\n              style: styles.forgottext,\n              children: \"Forgot password?\"\n            })\n          })]\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.footer,\n      children: createAccoutn ? _jsx(TouchableOpacity, {\n        onPress: goBack,\n        children: _jsxs(Text, {\n          style: {\n            color: \"#E5E8E8\"\n          },\n          children: [\"Have Account ? \", _jsx(Text, {\n            style: styles.inside,\n            children: \"  Go Back.\"\n          })]\n        })\n      }) : _jsx(TouchableOpacity, {\n        onPress: dontHaveAccount,\n        children: _jsxs(Text, {\n          style: {\n            color: \"#E5E8E8\"\n          },\n          children: [\"Don't have an account ?\", _jsx(Text, {\n            style: styles.inside,\n            children: \"  Sign up.\"\n          })]\n        })\n      })\n    })]\n  });\n};\n\nexport default LogInScreen;","map":{"version":3,"sources":["C:/Users/bsosn/OneDrive/Desktop/Expo/instagram/screens/LogInScreen.js"],"names":["React","useState","useEffect","useContext","AsyncStorage","AntDesign","firebase","Facebook","auth","styles","apiKeys","LogInScreen","navigation","LogBox","ignoreLogs","user","setUser","userToSave","setUserToSave","initializing","setInitializing","createAccoutn","setCreateAccount","name","onChangeName","userName","onChangeUserName","text","onChangeText","password","onChangePassword","secureEntry","setSecureEntry","onAuthStateChanged","apps","length","initializeApp","firebaseConfig","app","subscriber","show","createUser","createUserWithEmailAndPassword","then","currentUser","userId","uid","database","ref","set","firstname","email","login","photoURL","emailVerified","status","online","description","followed","followers","haveStory","userBiogram","userWebPage","LogIn","console","log","catch","error","code","saveToStorage","jsonValue","JSON","stringify","setItem","signInWithEmailAndPassword","navigate","screen","forgetPass","LogInWithFacebook","Expo","logInWithReadPermissionsAsync","permissions","type","token","credencial","FacebookAuthProvider","signInWithCredencial","dontHaveAccount","goBack","container","headerLogInScreen","imgLogInScreen","require","logButton","marginBottom","logButtontext","flexDirection","alignItems","width","flex","height","backgroundColor","textAlign","color","textInputLogIn","inputpass","textInputPass","showButton","forgot","forgottext","footer","inside"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Text, View, StyleSheet, Image, TextInput, TouchableOpacity, Dimensions, LogBox } from 'react-native';\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport * as firebase from 'firebase';\r\nimport * as Facebook from 'expo-facebook';\r\nimport auth from '@react-native-firebase/auth';\r\n\r\n/*Styles*/\r\nimport { styles } from '../styles/styles'\r\n\r\nimport apiKeys from '../config/keys';\r\n\r\n\r\n\r\n\r\n\r\nconst LogInScreen = ({ navigation }) => {\r\n    LogBox.ignoreLogs(['Setting a timer']);\r\n    const [user, setUser] = useState(null);\r\n    const [userToSave, setUserToSave] = useState(null);\r\n    const [initializing, setInitializing] = useState(true);\r\n    const [createAccoutn, setCreateAccount] = useState(false);\r\n    const [name, onChangeName] = useState();\r\n    const [userName, onChangeUserName] = useState();\r\n    const [text, onChangeText] = useState(\"sosnakrk@gmail.con\");\r\n    const [password, onChangePassword] = useState(\"SuperSecretPassword!\");\r\n    const [secureEntry, setSecureEntry] = useState(true);\r\n    // const [context, setContext] = useContext(AuthContext);\r\n\r\n    function onAuthStateChanged(user) {\r\n        setUser(user);\r\n        if (initializing) setInitializing(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(apiKeys.firebaseConfig);\r\n        } else {\r\n            firebase.app(); // if already initialized, use that one\r\n            const subscriber = firebase.auth().onAuthStateChanged(onAuthStateChanged);\r\n            return subscriber; // unsubscribe on unmount\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    const show = () => {\r\n        if (secureEntry) setSecureEntry(false);\r\n        else setSecureEntry(true);\r\n    }\r\n\r\n\r\n    const createUser = () => {\r\n        firebase.auth()\r\n            .createUserWithEmailAndPassword(text, password)\r\n            .then(() => {\r\n                if (firebase.auth().currentUser) {\r\n                    let userId = firebase.auth().currentUser.uid;\r\n                    if (userId) {\r\n                        firebase.database().ref('users/' + userId).set({\r\n                            firstname: name,\r\n                            email: text,\r\n                            login: userName,\r\n                            password: password,\r\n                            photoURL: false,\r\n                            emailVerified: false,\r\n                            uid: userId,\r\n                            status: true,\r\n                            online: true,\r\n                            description: false,\r\n                            followed: [],\r\n                            followers: [],\r\n                            haveStory: false,\r\n                            userBiogram: '',\r\n                            userWebPage: '',\r\n\r\n                        })\r\n                    }\r\n                }\r\n                LogIn()\r\n                console.log('User account created & signed in!');\r\n            })\r\n            .catch(error => {\r\n                if (error.code === 'auth/email-already-in-use') {\r\n                    console.log('That email address is already in use!');\r\n                }\r\n\r\n                if (error.code === 'auth/invalid-email') {\r\n                    console.log('That email address is invalid!');\r\n                }\r\n\r\n                console.error(error);\r\n            });\r\n    }\r\n    const saveToStorage = async (user) => {\r\n        try {\r\n            const jsonValue = JSON.stringify(user)\r\n            await AsyncStorage.setItem('User', jsonValue)\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const LogIn = () => {\r\n        firebase.auth()\r\n            .signInWithEmailAndPassword(text, password)\r\n            .then((user) => {\r\n                console.log('User account created & signed in!');\r\n                console.log(user.user.uid)\r\n                navigation.navigate('navigation', { screen: 'Home' });\r\n                saveToStorage(user.user);\r\n            })\r\n            .catch(error => {\r\n                if (error.code === 'auth/email-already-in-use') {\r\n                    console.log('That email address is already in use!');\r\n                }\r\n\r\n                if (error.code === 'auth/invalid-email') {\r\n                    console.log('That email address is invalid!');\r\n                }\r\n\r\n                console.error(error);\r\n            });\r\n    }\r\n\r\n\r\n    const forgetPass = () => {\r\n        console.log(\"LogIn\")\r\n    }\r\n\r\n    async function LogInWithFacebook() {\r\n        const [type, token] = await Expo.Facebook.logInWithReadPermissionsAsync\r\n            ('2808470432706384', { permissions: ['public_profile', \"email\"] })\r\n\r\n        if (type === 'success') {\r\n            const credencial = firebase.auth().FacebookAuthProvider.credencial(token)\r\n\r\n            firebase.auth().signInWithCredencial(credencial).catch((error) => {\r\n                console.log(error)\r\n            })\r\n\r\n\r\n        }\r\n        // try {\r\n        //     await Facebook.initializeAsync({\r\n        //         appId: '2808470432706384',\r\n        //     });\r\n        //     const {\r\n        //         type,\r\n        //         token,\r\n        //     } = await Facebook.logInWithReadPermissionsAsync({\r\n        //         permissions: ['public_profile',\"email\"],\r\n        //     });\r\n        //     if (type === 'success') {\r\n        //         // Get the user's name using Facebook's Graph API\r\n        //         const response = await fetch(`https://graph.facebook.com/me?access_token=${token}`);\r\n        //         Alert.alert('Logged in!', `Hi ${(await response.json()).name}!`);\r\n        //         navigation.navigate('navigation');\r\n        //     } else {\r\n        //         // type === 'cancel'\r\n        //     }\r\n        // } catch (error) {\r\n        //     alert(`Facebook Login Error: ${error.code}`);\r\n        // }\r\n\r\n\r\n    }\r\n    const dontHaveAccount = () => {\r\n        console.log(\"aaa\")\r\n        setCreateAccount(true);\r\n    }\r\n    const goBack = () => {\r\n        setCreateAccount(false);\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.headerLogInScreen}>\r\n                <View>\r\n                    <Image style={styles.imgLogInScreen} source={require('../assets/images/test.png')} />\r\n                </View>\r\n                <TouchableOpacity\r\n                    style={{ ...styles.logButton, marginBottom: 40 }}\r\n                    onPress={LogInWithFacebook} >\r\n                    <AntDesign name=\"facebook-square\" size={20} color=\"white\" />\r\n                    <Text style={styles.logButtontext}>Continue with Facebook</Text>\r\n                </TouchableOpacity>\r\n\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', width: 250 }}>\r\n                    <View style={{ flex: 1, height: 1, backgroundColor: '#E5E8E8' }} />\r\n                    <View>\r\n                        <Text style={{ width: 50, textAlign: 'center', color: \"#E5E8E8\" }}>OR</Text>\r\n                    </View>\r\n                    <View style={{ flex: 1, height: 1, backgroundColor: '#E5E8E8' }} />\r\n                </View>\r\n                {createAccoutn ?\r\n                    <View>\r\n                        <View style={styles.textInputLogIn}>\r\n                            <TextInput\r\n                                placeholder=\"Numer telefonu,nazwa użytkownika\"\r\n                                onChangeText={onChangeText}\r\n                                value={text}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.textInputLogIn}>\r\n                            <TextInput\r\n                                placeholder=\"Imię i nazwisko\"\r\n                                onChangeText={onChangeName}\r\n                                value={name}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.textInputLogIn}>\r\n                            <TextInput\r\n                                placeholder=\"Nazwa użytkownika\"\r\n                                onChangeText={onChangeUserName}\r\n                                value={userName}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.inputpass}>\r\n                            <View style={styles.textInputPass}>\r\n                                <TextInput\r\n                                    placeholder=\"Hasło\"\r\n                                    onChangeText={onChangePassword}\r\n                                    value={password}\r\n                                    secureTextEntry={secureEntry}\r\n                                />\r\n                            </View>\r\n                            <View style={styles.showButton}>\r\n                                <TouchableOpacity\r\n                                    onPress={show} >\r\n                                    <Text>Pokaż</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                        <View >\r\n                            <TouchableOpacity\r\n                                style={styles.logButton}\r\n                                onPress={createUser} >\r\n                                <Text style={styles.logButtontext}>Sign up</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    : <View>\r\n                        <View style={styles.textInputLogIn}>\r\n                            <TextInput\r\n                                placeholder=\"Numer telefonu,nazwa użytkownika\"\r\n                                onChangeText={onChangeText}\r\n                                value={text}\r\n                            />\r\n                        </View>\r\n                        <View style={styles.inputpass}>\r\n                            <View style={styles.textInputPass}>\r\n                                <TextInput\r\n                                    placeholder=\"Hasło\"\r\n                                    onChangeText={onChangePassword}\r\n                                    value={password}\r\n                                    secureTextEntry={secureEntry}\r\n                                />\r\n                            </View>\r\n                            <View style={styles.showButton}>\r\n                                <TouchableOpacity\r\n                                    onPress={show} >\r\n                                    <Text>Pokaż</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                        <View >\r\n                            <TouchableOpacity\r\n                                style={styles.logButton}\r\n                                onPress={LogIn} >\r\n                                <Text style={styles.logButtontext}>Log in</Text>\r\n                            </TouchableOpacity>\r\n\r\n                            <TouchableOpacity\r\n                                style={styles.forgot}\r\n                                onPress={forgetPass} >\r\n                                <Text style={styles.forgottext}>Forgot password?</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                }\r\n            </View>\r\n\r\n            <View style={styles.footer}>\r\n                {createAccoutn ?\r\n                    <TouchableOpacity\r\n                        onPress={goBack} >\r\n                        <Text style={{ color: \"#E5E8E8\" }}>Have Account ? <Text style={styles.inside}>  Go Back.</Text></Text>\r\n                    </TouchableOpacity>\r\n\r\n                    :\r\n                    <TouchableOpacity\r\n                        onPress={dontHaveAccount} >\r\n                        <Text style={{ color: \"#E5E8E8\" }}>Don't have an account ?<Text style={styles.inside}>  Sign up.</Text></Text>\r\n                    </TouchableOpacity>\r\n                }\r\n\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default LogInScreen;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}