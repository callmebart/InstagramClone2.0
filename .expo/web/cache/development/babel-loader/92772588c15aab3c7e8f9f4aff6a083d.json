{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { Foundation } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport HomeScreen from \"../screens/HomeScreen\";\nimport SearchScreen from \"../screens/SearchScreen\";\nimport AddToInstaScreen from \"../screens/AddToInstaScreen\";\nimport ShopScreen from \"../screens/ShopScreen\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport Post from \"../components/Post\";\nimport EditProfile from \"../screens/EditProfile\";\nimport OpenedStoryScreen from \"../components/OpenedStoryScreen\";\nimport MessagesScreen from \"../screens/MessagesScreen\";\nimport ActivityScreen from \"../screens/ActivityScreen\";\nimport PostLikesScreen from \"../screens/PostLikesScreen\";\nimport CommentsScreen from \"../screens/CommentsScreen\";\nimport SharePostScreen from \"../screens/SharePostScreen\";\nimport AddToInstaFinalScreen from \"../screens/AddToInstaFinalScreen\";\nimport AddToInstaTagPeople from \"../screens/AddToInstaTagPeople\";\nimport AddToInstaAdvancedSettings from \"../screens/AddToInstaAdvancedSettings\";\nimport AddToInstaAddLocation from \"../screens/AddToInstaAddLocation\";\nimport SinglePostScreen from \"../screens/SinglePostScreen\";\nimport ChatRoomScreen from \"../screens/ChatRoomScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\n\nvar setTabBarVisible = function setTabBarVisible(route) {\n  var routeName = getFocusedRouteNameFromRoute(route);\n  var hideOnScreens = ['OpenedStoryScreen', 'MessagesStack', 'ActivityStack', 'CommentsSharesStack', 'AddToInstaFinalScreen', 'AddToInstaScreen', 'AddToInstaStack', 'AddToInstaTagPeople', 'AddToInstaAdvancedSettings', 'AddToInstaAddLocation', 'ChatRoomScreen'];\n  if (hideOnScreens.indexOf(routeName) > -1) return false;\n  return true;\n};\n\nvar screenOptionStyle = _objectSpread(_objectSpread({\n  headerShown: false\n}, TransitionPresets.SlideFromRightIOS), {}, {\n  gestureEnabled: true,\n  headerStyle: {\n    elevation: 0,\n    shadowOpacity: 0,\n    borderBottomWidth: 0\n  }\n});\n\nvar HomeStack = function HomeStack(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: screenOptionStyle,\n    children: [_jsx(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: HomeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"HomeProfile\",\n      component: ProfileScreen\n    }), _jsx(Stack.Screen, {\n      name: \"OpenedStoryScreen\",\n      component: OpenedStoryScreen\n    }), _jsx(Stack.Screen, {\n      name: \"MessagesStack\",\n      component: MessagesStack\n    }), _jsx(Stack.Screen, {\n      name: \"ActivityStack\",\n      component: ActivityStack\n    }), _jsx(Stack.Screen, {\n      name: \"PostLikesScreenStack\",\n      component: PostLikesScreenStack\n    }), _jsx(Stack.Screen, {\n      name: \"CommentsSharesStack\",\n      component: CommentsSharesStack\n    })]\n  });\n};\n\nvar SearchScreenStack = function SearchScreenStack(_ref2) {\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: screenOptionStyle,\n    children: [_jsx(Stack.Screen, {\n      name: \"SearchScreen\",\n      component: SearchScreen\n    }), _jsx(Stack.Screen, {\n      name: \"SinglePostScreen\",\n      component: SinglePostScreen\n    })]\n  });\n};\n\nvar CommentsSharesStack = function CommentsSharesStack(_ref3) {\n  var route = _ref3.route,\n      navigation = _ref3.navigation;\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"CommentsScreen\",\n      component: CommentsScreen,\n      options: {\n        title: 'Comments',\n        headerStyle: {\n          height: 70,\n          elevation: 0,\n          shadowOpacity: 0,\n          borderBottomWidth: 0\n        },\n        headerTitleStyle: {\n          fontSize: 18\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"SharePostScreen\",\n      component: SharePostScreen,\n      options: {\n        title: 'Share',\n        headerStyle: {\n          height: 70,\n          elevation: 0,\n          shadowOpacity: 0,\n          borderBottomWidth: 0\n        },\n        headerTitleStyle: {\n          fontSize: 18\n        }\n      }\n    })]\n  });\n};\n\nvar PostLikesScreenStack = function PostLikesScreenStack(_ref4) {\n  var route = _ref4.route,\n      navigation = _ref4.navigation;\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"PostLikesScreen\",\n      component: PostLikesScreen,\n      options: {\n        title: 'Likes',\n        headerStyle: {\n          height: 70,\n          elevation: 0,\n          shadowOpacity: 0,\n          borderBottomWidth: 0\n        },\n        headerTitleStyle: {\n          fontSize: 18\n        }\n      }\n    })\n  });\n};\n\nvar MessagesStack = function MessagesStack(_ref5) {\n  var rute = _ref5.rute,\n      navigation = _ref5.navigation;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"MessagesScreen\",\n      component: MessagesScreen\n    }), _jsx(Stack.Screen, {\n      name: \"ChatRoomScreen\",\n      component: ChatRoomScreen\n    })]\n  });\n};\n\nvar ActivityStack = function ActivityStack(_ref6) {\n  var route = _ref6.route,\n      navigation = _ref6.navigation;\n  return _jsx(Stack.Navigator, {\n    children: _jsx(Stack.Screen, {\n      name: \"ActivityScreen\",\n      component: ActivityScreen,\n      options: {\n        title: \"Activity\",\n        headerStyle: {\n          height: 70\n        },\n        headerTitleStyle: {\n          fontSize: 18\n        }\n      }\n    })\n  });\n};\n\nvar ProfileStack = function ProfileStack(_ref7) {\n  var route = _ref7.route,\n      navigation = _ref7.navigation;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: screenOptionStyle,\n    children: [_jsx(Stack.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen\n    }), _jsx(Stack.Screen, {\n      name: \"EditProfile\",\n      component: EditProfile\n    })]\n  });\n};\n\nvar AddToInstaStack = function AddToInstaStack(_ref8) {\n  var route = _ref8.route,\n      navigation = _ref8.navigation;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: screenOptionStyle,\n    children: [_jsx(Stack.Screen, {\n      name: \"AddToInstaScreen\",\n      component: AddToInstaScreen\n    }), _jsx(Stack.Screen, {\n      name: \"AddToInstaFinalScreen\",\n      component: AddToInstaFinalScreen\n    }), _jsx(Stack.Screen, {\n      name: \"AddToInstaTagPeople\",\n      component: AddToInstaTagPeople\n    }), _jsx(Stack.Screen, {\n      name: \"AddToInstaAdvancedSettings\",\n      component: AddToInstaAdvancedSettings\n    }), _jsx(Stack.Screen, {\n      name: \"AddToInstaAddLocation\",\n      component: AddToInstaAddLocation\n    })]\n  });\n};\n\nvar Navi = function Navi(_ref9) {\n  var route = _ref9.route,\n      navigation = _ref9.navigation;\n  var data = route;\n  console.log(navigation);\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref10) {\n      var route = _ref10.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref11) {\n          var focused = _ref11.focused,\n              color = _ref11.color,\n              size = _ref11.size;\n\n          if (route.name === 'Home') {\n            return _jsx(Foundation, {\n              name: focused ? 'home' : 'home',\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Search') {\n            return _jsx(Ionicons, {\n              name: focused ? 'search' : 'search',\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Add') {\n            return _jsx(Feather, {\n              name: focused ? 'plus-square' : 'plus-square',\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Shop') {\n            return _jsx(MaterialCommunityIcons, {\n              name: focused ? 'shopping-outline' : 'shopping-outline',\n              size: size,\n              color: color\n            });\n          } else if (route.name === 'Profile') {\n            return _jsx(Feather, {\n              name: focused ? 'user' : 'user',\n              size: size,\n              color: color\n            });\n          }\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'black',\n      inactiveTintColor: 'gray',\n      labelStyle: {\n        display: \"none\"\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      options: function options(_ref12) {\n        var route = _ref12.route;\n        return {\n          tabBarVisible: setTabBarVisible(route)\n        };\n      },\n      children: function children() {\n        return _jsx(HomeStack, {});\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      children: function children() {\n        return _jsx(SearchScreenStack, {});\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Add\",\n      options: function options(_ref13) {\n        var route = _ref13.route;\n        return {\n          tabBarVisible: setTabBarVisible(route)\n        };\n      },\n      children: function children() {\n        return _jsx(AddToInstaStack, {});\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Shop\",\n      component: ShopScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      children: function children() {\n        return _jsx(ProfileStack, {});\n      }\n    })]\n  });\n};\n\nexport default Navi;\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["C:/Users/bsosn/OneDrive/Desktop/Expo/instagram/navigation/Navigation.js"],"names":["React","useState","useEffect","NavigationContainer","createBottomTabNavigator","SafeAreaProvider","createStackNavigator","TransitionPresets","getFocusedRouteNameFromRoute","Ionicons","Feather","MaterialIcons","AntDesign","Foundation","MaterialCommunityIcons","HomeScreen","SearchScreen","AddToInstaScreen","ShopScreen","ProfileScreen","Post","EditProfile","OpenedStoryScreen","MessagesScreen","ActivityScreen","PostLikesScreen","CommentsScreen","SharePostScreen","AddToInstaFinalScreen","AddToInstaTagPeople","AddToInstaAdvancedSettings","AddToInstaAddLocation","SinglePostScreen","ChatRoomScreen","Tab","Stack","setTabBarVisible","route","routeName","hideOnScreens","indexOf","screenOptionStyle","headerShown","SlideFromRightIOS","gestureEnabled","headerStyle","elevation","shadowOpacity","borderBottomWidth","HomeStack","navigation","MessagesStack","ActivityStack","PostLikesScreenStack","CommentsSharesStack","SearchScreenStack","title","height","headerTitleStyle","fontSize","rute","ProfileStack","AddToInstaStack","Navi","data","console","log","tabBarIcon","focused","color","size","name","activeTintColor","inactiveTintColor","labelStyle","display","tabBarVisible","styles","StyleSheet","create","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, StyleSheet } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack'\r\nimport { getFocusedRouteNameFromRoute } from '@react-navigation/native';\r\n/*Icons*/\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { Foundation } from '@expo/vector-icons';\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n\r\n\r\n/*Screens*/\r\nimport HomeScreen from \"../screens/HomeScreen\";\r\nimport SearchScreen from \"../screens/SearchScreen\";\r\nimport AddToInstaScreen from \"../screens/AddToInstaScreen\";\r\nimport ShopScreen from \"../screens/ShopScreen\";\r\nimport ProfileScreen from \"../screens/ProfileScreen\";\r\nimport Post from \"../components/Post\";\r\nimport EditProfile from \"../screens/EditProfile\";\r\nimport OpenedStoryScreen from \"../components/OpenedStoryScreen\";\r\nimport MessagesScreen from \"../screens/MessagesScreen\";\r\nimport ActivityScreen from '../screens/ActivityScreen';\r\nimport PostLikesScreen from '../screens/PostLikesScreen';\r\nimport CommentsScreen from '../screens/CommentsScreen';\r\nimport SharePostScreen from '../screens/SharePostScreen';\r\nimport AddToInstaFinalScreen from '../screens/AddToInstaFinalScreen';\r\nimport AddToInstaTagPeople from '../screens/AddToInstaTagPeople';\r\nimport AddToInstaAdvancedSettings from '../screens/AddToInstaAdvancedSettings';\r\nimport AddToInstaAddLocation from '../screens/AddToInstaAddLocation';\r\nimport SinglePostScreen from '../screens/SinglePostScreen';\r\nimport ChatRoomScreen from '../screens/ChatRoomScreen';\r\n/*Navigation types*/\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\n\r\nconst setTabBarVisible = (route) => {\r\n  const routeName = getFocusedRouteNameFromRoute(route);\r\n  const hideOnScreens = [\r\n    'OpenedStoryScreen',\r\n    'MessagesStack',\r\n    'ActivityStack',\r\n    'CommentsSharesStack',\r\n    'AddToInstaFinalScreen',\r\n    'AddToInstaScreen',\r\n    'AddToInstaStack',\r\n    'AddToInstaTagPeople',\r\n    'AddToInstaAdvancedSettings',\r\n    'AddToInstaAddLocation',\r\n    'ChatRoomScreen'\r\n  ];\r\n  if (hideOnScreens.indexOf(routeName) > -1) return false;\r\n  return true;\r\n}\r\n\r\nconst screenOptionStyle = {\r\n  headerShown: false,\r\n  ...TransitionPresets.SlideFromRightIOS,\r\n  gestureEnabled: true,\r\n  headerStyle: {\r\n    elevation: 0,\r\n    shadowOpacity: 0,\r\n    borderBottomWidth: 0,\r\n  },\r\n};\r\n\r\nconst HomeStack = ({ route, navigation }) => {\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={screenOptionStyle}\r\n    >\r\n      <Stack.Screen name=\"HomeScreen\" component={HomeScreen} />\r\n      <Stack.Screen name=\"HomeProfile\" component={ProfileScreen} />\r\n      <Stack.Screen name=\"OpenedStoryScreen\" component={OpenedStoryScreen} />\r\n      <Stack.Screen name=\"MessagesStack\" component={MessagesStack} />\r\n      <Stack.Screen name=\"ActivityStack\" component={ActivityStack} />\r\n      <Stack.Screen name='PostLikesScreenStack' component={PostLikesScreenStack} />\r\n      <Stack.Screen name='CommentsSharesStack' component={CommentsSharesStack} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nconst SearchScreenStack = ({ route, navigation }) => {\r\n\r\n  return (\r\n    <Stack.Navigator\r\n    screenOptions={screenOptionStyle}\r\n    >\r\n      <Stack.Screen name=\"SearchScreen\" component={SearchScreen} />\r\n      <Stack.Screen name=\"SinglePostScreen\" component={SinglePostScreen} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\n\r\nconst CommentsSharesStack = ({ route, navigation }) => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name='CommentsScreen' component={CommentsScreen}\r\n        options={{\r\n          title: 'Comments',\r\n          headerStyle: {\r\n            height: 70,\r\n            elevation: 0,\r\n            shadowOpacity: 0,\r\n            borderBottomWidth: 0,\r\n          },\r\n          headerTitleStyle: { fontSize: 18 },\r\n        }}\r\n      />\r\n\r\n      <Stack.Screen name='SharePostScreen' component={SharePostScreen}\r\n        options={{\r\n          title: 'Share',\r\n          headerStyle: {\r\n            height: 70,\r\n            elevation: 0,\r\n            shadowOpacity: 0,\r\n            borderBottomWidth: 0,\r\n          },\r\n          headerTitleStyle: { fontSize: 18 },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nconst PostLikesScreenStack = ({ route, navigation }) => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"PostLikesScreen\" component={PostLikesScreen}\r\n        options={{\r\n          title: 'Likes',\r\n          headerStyle: {\r\n            height: 70,\r\n            elevation: 0,\r\n            shadowOpacity: 0,\r\n            borderBottomWidth: 0,\r\n          },\r\n          headerTitleStyle: { fontSize: 18 },\r\n        }}\r\n      />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\nconst MessagesStack = ({ rute, navigation }) => {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }} >\r\n      <Stack.Screen name=\"MessagesScreen\" component={MessagesScreen} />\r\n      <Stack.Screen name=\"ChatRoomScreen\" component={ChatRoomScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst ActivityStack = ({ route, navigation }) => {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"ActivityScreen\" component={ActivityScreen}\r\n        options={{\r\n          title: \"Activity\",\r\n          headerStyle: { height: 70 },\r\n          headerTitleStyle: { fontSize: 18 },\r\n        }} />\r\n        \r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst ProfileStack = ({ route, navigation }) => {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={screenOptionStyle}\r\n    >\r\n      <Stack.Screen name=\"ProfileScreen\" component={ProfileScreen} />\r\n      <Stack.Screen name=\"EditProfile\" component={EditProfile} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nconst AddToInstaStack = ({ route, navigation }) => {\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={screenOptionStyle}\r\n    >\r\n      <Stack.Screen name=\"AddToInstaScreen\" component={AddToInstaScreen} />\r\n      <Stack.Screen name=\"AddToInstaFinalScreen\" component={AddToInstaFinalScreen} />\r\n      <Stack.Screen name='AddToInstaTagPeople' component={AddToInstaTagPeople} />\r\n      <Stack.Screen name='AddToInstaAdvancedSettings' component={AddToInstaAdvancedSettings} />\r\n      <Stack.Screen name='AddToInstaAddLocation' component={AddToInstaAddLocation} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nconst Navi = ({ route, navigation }) => {\r\n  // console.log(route)\r\n  const data = route;\r\n  console.log(navigation)\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          if (route.name === 'Home') {\r\n            return (\r\n              <Foundation\r\n                name={\r\n                  focused\r\n                    ? 'home'\r\n                    : 'home'\r\n                }\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          } else if (route.name === 'Search') {\r\n            return (\r\n              <Ionicons\r\n                name={focused ? 'search' : 'search'}\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n          else if (route.name === 'Add') {\r\n            return (\r\n              <Feather\r\n                name={focused ? 'plus-square' : 'plus-square'}\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n          else if (route.name === 'Shop') {\r\n            return (\r\n              <MaterialCommunityIcons\r\n                name={focused ? 'shopping-outline' : 'shopping-outline'}\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n          else if (route.name === 'Profile') {\r\n            return (\r\n              <Feather\r\n                name={focused ? 'user' : 'user'}\r\n                size={size}\r\n                color={color}\r\n              />\r\n            );\r\n          }\r\n        },\r\n\r\n\r\n      })}\r\n      tabBarOptions={{\r\n        activeTintColor: 'black',\r\n        inactiveTintColor: 'gray',\r\n        labelStyle: { display: \"none\" }, //wywala mi podpisy pod iconami \r\n\r\n      }}\r\n    >\r\n      <Tab.Screen name=\"Home\" options={({ route }) => ({ tabBarVisible: setTabBarVisible(route) })}>\r\n        {() => <HomeStack />}\r\n      </Tab.Screen>\r\n\r\n      <Tab.Screen name=\"Search\">\r\n\r\n        {() => <SearchScreenStack />}\r\n      </Tab.Screen>\r\n\r\n      <Tab.Screen name=\"Add\" options={({ route }) => ({ tabBarVisible: setTabBarVisible(route) })}>\r\n        {() => <AddToInstaStack />}\r\n      </Tab.Screen>\r\n\r\n      <Tab.Screen name=\"Shop\" component={ShopScreen} />\r\n\r\n      <Tab.Screen name=\"Profile\">\r\n        {() => <ProfileStack />}\r\n      </Tab.Screen>\r\n\r\n    </Tab.Navigator>\r\n  )\r\n};\r\n\r\nexport default Navi;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {}\r\n});\r\n"]},"metadata":{},"sourceType":"module"}