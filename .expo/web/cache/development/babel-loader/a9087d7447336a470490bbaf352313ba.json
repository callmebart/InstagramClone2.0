{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport * as firebase from 'firebase';\nimport apiKeys from \"../config/keys\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\nimport Img from \"../components/Img\";\nimport { addNotification } from \"../functions/notifications \";\nimport { styles, windowHeight, windowWidth } from \"../styles/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  LogBox.ignoreLogs(['Accessing the \"state\" property of the \"route\" object is not supported.']);\n  console.log(\"======================================================================================\");\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userDBdata = _useState4[0],\n      setUserDBdata = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userRandomDBdata = _useState6[0],\n      setRandomUserDBdata = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loaded = _useState8[0],\n      setLoaded = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      followed = _useState10[0],\n      setFollowed = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      countFollowers = _useState12[0],\n      setCountFollowers = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      countFollowed = _useState14[0],\n      setCountFollowed = _useState14[1];\n\n  var followersArray = [];\n  var followedArray = [];\n  var countFollowersArr = [];\n  var countFollowedArr = [];\n\n  var sendMessage = function sendMessage() {};\n\n  var edit = function edit() {\n    console.log(\"Edit profile\");\n    navigation.navigate(\"EditProfile\", {\n      userData: userDBdata\n    });\n  };\n\n  var viewGrid = function viewGrid() {\n    console.log(\"view 1\");\n  };\n\n  var viewProf = function viewProf() {\n    console.log(\"view 2\");\n  };\n\n  var fetchPost = function fetchPost(user) {\n    var list;\n    return _regeneratorRuntime.async(function fetchPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            list = [];\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(firebase.firestore().collection('posts').where('userId', '==', user).orderBy('postTime', 'desc').get().then(function (querySnapshot) {\n              querySnapshot.forEach(function (doc) {\n                var _doc$data = doc.data(),\n                    userId = _doc$data.userId,\n                    post = _doc$data.post,\n                    postImg = _doc$data.postImg,\n                    postTime = _doc$data.postTime,\n                    likes = _doc$data.likes,\n                    comments = _doc$data.comments;\n\n                list.push({\n                  id: doc.id,\n                  userId: userId,\n                  userName: 'Test Name',\n                  userImg: 'https://www.biography.com/.image/t_share/MTE4MDAzNDEwNzg5ODI4MTEw/barack-obama-12782369-1-402.jpg',\n                  postTime: postTime,\n                  post: post,\n                  postImg: postImg,\n                  liked: false,\n                  likes: likes,\n                  comments: comments\n                });\n              });\n            }));\n\n          case 3:\n            setPosts(list);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (posts != null) setLoaded(true);\n  }, [posts]);\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      addNoti = _useState16[0],\n      setAddNoti = _useState16[1];\n\n  useEffect(function () {\n    if (addNoti) {\n      addNotification(route.params.userId, userDBdata, 'follow');\n      setAddNoti(false);\n    }\n  }, [addNoti]);\n  useEffect(function () {\n    console.log(\"USE EFFECT PROFILE\");\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(apiKeys.firebaseConfig);\n    } else {\n      firebase.app();\n    }\n\n    readUserData();\n    count();\n    if (route.params) readRandomUserData(route.params.userId);\n  }, []);\n\n  var readUserData = function readUserData() {\n    if (firebase.auth().currentUser) {\n      var userId = firebase.auth().currentUser.uid;\n\n      if (userId) {\n        firebase.database().ref('users/' + userId).once('value').then(function (snapshot) {\n          var userData = snapshot.val();\n          setUserDBdata(userData);\n          if (!route.params) fetchPost(userData.uid);\n        });\n      }\n    }\n  };\n\n  var readRandomUserData = function readRandomUserData(user) {\n    return _regeneratorRuntime.async(function readRandomUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"ReadRandomUserData:\");\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(firebase.database().ref('users/' + user).once('value').then(function (snapshot) {\n              var userData = snapshot.val();\n              setRandomUserDBdata(userData);\n              fetchPost(route.params.userId);\n              checkIfFollowed();\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var FollowProfile = function FollowProfile() {\n    var userToFollow, userToFollowUserName, currentUser;\n    return _regeneratorRuntime.async(function FollowProfile$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            userToFollow = route.params.userId;\n            userToFollowUserName = route.params.userId;\n            currentUser = firebase.auth().currentUser.uid;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(firebase.database().ref('users/' + userToFollow).on('value', function (snapshot) {\n              followersArray = snapshot.val().followers;\n\n              if (followersArray.includes(userDBdata.uid)) {\n                console.log(\"ure following that person\");\n\n                if (followed) {\n                  console.log(\"remove follow\");\n                  var index = followersArray.indexOf(userDBdata.uid);\n\n                  if (index !== -1) {\n                    followersArray.splice(index, 1);\n                  }\n                }\n              } else {\n                followersArray.push(userDBdata.uid);\n              }\n            }));\n\n          case 5:\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(firebase.database().ref('users/' + userToFollow).update({\n              followers: followersArray\n            }).then(function () {\n              console.log(\"Followers data updated\");\n              if (!followed) setAddNoti(true);\n            }));\n\n          case 7:\n            firebase.database().ref('users/' + currentUser).on('value', function (snapshot) {\n              followedArray = snapshot.val().followed;\n\n              if (followedArray.includes(userToFollowUserName)) {\n                console.log(\"already in followed\");\n\n                if (followed) {\n                  console.log(\"remove follow\");\n                  var index = followedArray.indexOf(userToFollowUserName);\n\n                  if (index !== -1) {\n                    followedArray.splice(index, 1);\n                  }\n                }\n              } else {\n                followedArray.push(userToFollowUserName);\n              }\n            });\n            firebase.database().ref('users/' + currentUser).update({\n              followed: followedArray\n            }).then(function () {\n              console.log(\"Followed users data updated\");\n              if (followed) setFollowed(false);\n            });\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var checkIfFollowed = function checkIfFollowed() {\n    var currentUser = firebase.auth().currentUser.uid;\n    var userToFollow = route.params.userId;\n    var userToFollowUserName = route.params.userId;\n    firebase.database().ref('users/' + currentUser).on('value', function (snapshot) {\n      followedArray = snapshot.val().followed;\n\n      if (followedArray.includes(userToFollowUserName)) {\n        console.log(\"check if : already in followed\");\n        setFollowed(true);\n      }\n    });\n  };\n\n  var count = function count() {\n    var currentUser = firebase.auth().currentUser.uid;\n\n    if (route.params) {\n      var userToFollow = route.params.userId;\n      firebase.database().ref('users/' + userToFollow).on('value', function (snapshot) {\n        countFollowedArr = snapshot.val().followed;\n        countFollowersArr = snapshot.val().followers;\n        setCountFollowed(countFollowedArr.length);\n        setCountFollowers(countFollowersArr.length);\n      });\n    } else {\n      firebase.database().ref('users/' + currentUser).on('value', function (snapshot) {\n        countFollowedArr = snapshot.val().followed;\n        countFollowersArr = snapshot.val().followers;\n        setCountFollowed(countFollowedArr.length);\n        setCountFollowers(countFollowersArr.length);\n      });\n    }\n  };\n\n  return _jsx(View, {\n    style: styles.containerProfileScreen,\n    children: loaded ? _jsxs(SafeAreaView, {\n      style: {\n        flex: 1,\n        backgroundColor: '#fff'\n      },\n      children: [_jsxs(View, {\n        style: styles.headerProfileScreen,\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: \"center\",\n            marginTop: -30\n          },\n          children: [_jsx(Text, {\n            style: {\n              fontWeight: \"bold\",\n              fontSize: 22,\n              marginLeft: 5\n            },\n            children: route.params ? userRandomDBdata.login : userDBdata.login\n          }), _jsx(Ionicons, {\n            name: \"ios-chevron-down-sharp\",\n            size: 24,\n            color: \"black\"\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            marginRight: 15,\n            justifyContent: 'space-between',\n            width: windowWidth / 4.5\n          },\n          children: [_jsx(FontAwesome, {\n            name: \"plus-square-o\",\n            size: 34,\n            color: \"black\",\n            style: {\n              marginRight: 5\n            }\n          }), _jsx(SimpleLineIcons, {\n            name: \"menu\",\n            size: 28,\n            color: \"black\",\n            style: {\n              marginRight: 5\n            }\n          })]\n        })]\n      }), _jsxs(ScrollView, {\n        style: styles.containerProfileScreen,\n        contentContainerStyle: {\n          justifyContent: \"center\",\n          alignItems: 'center'\n        },\n        showsVerticalScrollIndicator: false,\n        children: [_jsx(View, {\n          style: {\n            backgroundColor: \"red\",\n            width: windowWidth\n          },\n          children: _jsxs(View, {\n            style: {\n              backgroundColor: \"#fff\"\n            },\n            children: [_jsxs(View, {\n              style: {\n                flexDirection: 'row',\n                justifyContent: 'space-around',\n                alignItems: 'center'\n              },\n              children: [_jsx(View, {\n                children: route.params ? _jsx(Image, {\n                  style: styles.imgProfileMax,\n                  source: {\n                    uri: userRandomDBdata.photoURL\n                  }\n                }) : _jsx(Image, {\n                  style: styles.imgProfileMax,\n                  source: {\n                    uri: userDBdata.photoURL\n                  }\n                })\n              }), _jsxs(View, {\n                style: {\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                },\n                children: [_jsx(Text, {\n                  children: posts ? posts.length : 0\n                }), _jsx(Text, {\n                  children: \"Posts\"\n                })]\n              }), _jsxs(View, {\n                style: {\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                },\n                children: [_jsx(Text, {\n                  children: countFollowers\n                }), _jsx(Text, {\n                  children: \"Followers\"\n                })]\n              }), _jsxs(View, {\n                style: {\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                },\n                children: [_jsx(Text, {\n                  children: countFollowed\n                }), _jsx(Text, {\n                  children: \"Followed\"\n                })]\n              })]\n            }), _jsx(Text, {\n              style: {\n                margin: 10\n              },\n              children: route.params ? userRandomDBdata.userBiogram : userDBdata.userBiogram\n            }), _jsx(View, {\n              style: {\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              },\n              children: route.params ? _jsxs(View, {\n                style: {\n                  flexDirection: 'row',\n                  justifyContent: 'space-around'\n                },\n                children: [followed ? _jsx(TouchableOpacity, {\n                  onPress: FollowProfile,\n                  style: _objectSpread({}, styles.editFollow),\n                  children: _jsx(Text, {\n                    style: {\n                      fontWeight: 'bold',\n                      color: \"black\"\n                    },\n                    children: \"Following\"\n                  })\n                }) : _jsx(TouchableOpacity, {\n                  onPress: FollowProfile,\n                  style: _objectSpread(_objectSpread({}, styles.editFollow), {}, {\n                    backgroundColor: \"#458eff\"\n                  }),\n                  children: _jsx(Text, {\n                    style: {\n                      fontWeight: 'bold',\n                      color: \"#ffffff\"\n                    },\n                    children: \"Follow\"\n                  })\n                }), _jsx(TouchableOpacity, {\n                  onPress: sendMessage,\n                  style: styles.editFollow,\n                  children: _jsx(Text, {\n                    style: {\n                      fontWeight: 'bold'\n                    },\n                    children: \"Message\"\n                  })\n                })]\n              }) : _jsx(TouchableOpacity, {\n                onPress: edit,\n                style: styles.edit,\n                children: _jsx(Text, {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: \"Edit Profile\"\n                })\n              })\n            })]\n          })\n        }), _jsxs(View, {\n          children: [_jsxs(View, {\n            style: styles.buttons,\n            children: [_jsx(TouchableOpacity, {\n              onPress: viewGrid,\n              style: styles.viewBut,\n              children: _jsx(MaterialCommunityIcons, {\n                name: \"view-grid-outline\",\n                size: 33,\n                color: \"black\"\n              })\n            }), _jsx(TouchableOpacity, {\n              onPress: viewProf,\n              style: styles.viewBut,\n              children: _jsx(SimpleLineIcons, {\n                name: \"user\",\n                size: 30,\n                color: \"black\"\n              })\n            })]\n          }), _jsx(View, {\n            style: {\n              justifyContent: 'center',\n              alignItems: 'center',\n              width: windowWidth,\n              height: windowHeight / 2\n            },\n            children: _jsx(ScrollView, {\n              style: {\n                width: windowWidth\n              },\n              nestedScrollEnabled: true,\n              bounces: false,\n              children: _jsx(View, {\n                style: {\n                  flexDirection: 'row'\n                },\n                children: _jsx(FlatList, {\n                  data: posts,\n                  numColumns: 3,\n                  renderItem: function renderItem(_ref2) {\n                    var item = _ref2.item;\n                    return _jsx(Img, {\n                      item: item\n                    });\n                  },\n                  keyExtractor: function keyExtractor(item, index) {\n                    return index.toString();\n                  }\n                })\n              })\n            })\n          })]\n        })]\n      })]\n    }) : _jsx(View, {\n      style: styles.loading,\n      children: _jsx(ActivityIndicator, {\n        animating: true,\n        color: \"#458eff\",\n        size: 'large'\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/bsosn/OneDrive/Desktop/Expo/instagram/screens/ProfileScreen.js"],"names":["React","useState","useEffect","ScrollView","TouchableOpacity","SafeAreaView","firebase","apiKeys","Ionicons","MaterialCommunityIcons","SimpleLineIcons","FontAwesome","Img","addNotification","styles","windowHeight","windowWidth","ProfileScreen","navigation","route","LogBox","ignoreLogs","console","log","posts","setPosts","userDBdata","setUserDBdata","userRandomDBdata","setRandomUserDBdata","loaded","setLoaded","followed","setFollowed","countFollowers","setCountFollowers","countFollowed","setCountFollowed","followersArray","followedArray","countFollowersArr","countFollowedArr","sendMessage","edit","navigate","userData","viewGrid","viewProf","fetchPost","user","list","firestore","collection","where","orderBy","get","then","querySnapshot","forEach","doc","data","userId","post","postImg","postTime","likes","comments","push","id","userName","userImg","liked","addNoti","setAddNoti","params","apps","length","initializeApp","firebaseConfig","app","readUserData","count","readRandomUserData","auth","currentUser","uid","database","ref","once","snapshot","val","checkIfFollowed","FollowProfile","userToFollow","userToFollowUserName","on","followers","includes","index","indexOf","splice","update","containerProfileScreen","flex","backgroundColor","headerProfileScreen","flexDirection","justifyContent","alignItems","marginTop","fontWeight","fontSize","marginLeft","login","marginRight","width","imgProfileMax","uri","photoURL","margin","userBiogram","editFollow","color","buttons","viewBut","height","item","toString","loading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Text, View, Image, FlatList, LogBox, ActivityIndicator } from 'react-native';\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\n\nimport * as firebase from 'firebase';\nimport apiKeys from '../config/keys';\n\n/*ICONS*/\nimport { Ionicons } from '@expo/vector-icons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { SimpleLineIcons } from '@expo/vector-icons';\nimport { FontAwesome } from '@expo/vector-icons';\n\n/*Components*/\nimport Img from \"../components/Img\";\n\n/*FUNCTIONS*/\nimport { addNotification } from '../functions/notifications ';\n\n/*Styles*/\nimport { styles,windowHeight,windowWidth } from '../styles/styles'\n\n\nexport default function ProfileScreen({ navigation, route }) {\n  LogBox.ignoreLogs(['Accessing the \"state\" property of the \"route\" object is not supported.'])\n  console.log(\"======================================================================================\")\n\n  const [posts, setPosts] = useState(null)\n  const [userDBdata, setUserDBdata] = useState();    //for user real Time Database \n  const [userRandomDBdata, setRandomUserDBdata] = useState();    //for user real Time Database \n  const [loaded, setLoaded] = useState(false);\n  const [followed, setFollowed] = useState(false);\n  const [countFollowers, setCountFollowers] = useState(0)\n  const [countFollowed, setCountFollowed] = useState(0)\n\n  let followersArray = []\n  let followedArray = []\n\n  let countFollowersArr = []\n  let countFollowedArr = []\n\n\n  const sendMessage = () => {\n\n  }\n  const edit = () => {\n    console.log(\"Edit profile\")\n    navigation.navigate(\"EditProfile\", { userData: userDBdata })\n  }\n  const viewGrid = () => {\n    console.log(\"view 1\")\n  }\n  const viewProf = () => {\n    console.log(\"view 2\")\n  }\n\n  // const loadStorage = async () => {\n  //   try {\n  //     const jsonValue = await AsyncStorage.getItem('User')\n  //     if (jsonValue !== null) {\n  //       setUserStorage(JSON.parse(jsonValue))\n  //       //console.log(\"userStorage\", userStorage);\n  //       setUserUid(userStorage.uid)\n\n  //     }\n  //   } catch (e) {\n  //     console.log(e);\n  //   }\n  // }\n\n  const fetchPost = async (user) => {\n      const list = [];\n      await firebase.firestore()\n        .collection('posts')\n        .where('userId', '==', user)\n        .orderBy('postTime', 'desc')\n        .get()\n        .then((querySnapshot) => {\n          //console.log('Total Posts: ',querySnapshot.size)\n          querySnapshot.forEach(doc => {\n            const { userId, post, postImg, postTime, likes, comments } = doc.data();\n            list.push({\n              id: doc.id,\n              userId: userId,\n              userName: 'Test Name',\n              userImg: 'https://www.biography.com/.image/t_share/MTE4MDAzNDEwNzg5ODI4MTEw/barack-obama-12782369-1-402.jpg',\n              postTime: postTime,\n              post: post,\n              postImg: postImg,\n              liked: false,\n              likes: likes,\n              comments: comments,\n\n            });\n          });\n        })\n      setPosts(list)\n    \n  }\n  useEffect(() => {\n      if (posts != null) setLoaded(true)\n    }, [posts]);\n\n  const [addNoti,setAddNoti] = useState(false)\n  useEffect(()=>{\n    if(addNoti){\n      addNotification( route.params.userId, userDBdata, 'follow')\n      setAddNoti(false)\n    } \n  },[addNoti])\n\n  useEffect(() => {\n    console.log(\"USE EFFECT PROFILE\")\n    if (!firebase.apps.length) {\n      firebase.initializeApp(apiKeys.firebaseConfig);\n    } else {\n      firebase.app(); // if already initialized, use that one\n    }\n    readUserData();\n    count();\n    /*Reading setting data set state*/\n    if (route.params) \n      readRandomUserData(route.params.userId)  \n  }, []);\n\n\n  const readUserData = () => {\n    if (firebase.auth().currentUser) {\n      let userId = firebase.auth().currentUser.uid;\n      if (userId) {\n        firebase.database().ref('users/' + userId)\n          .once('value')\n          .then(snapshot => {\n            let userData = snapshot.val();\n            setUserDBdata(userData);\n            if(!route.params) fetchPost(userData.uid);\n          });\n      }\n    }\n  }\n  const readRandomUserData = async (user) => {\n    console.log(\"ReadRandomUserData:\")\n    await firebase.database().ref('users/' + user)\n      .once('value')\n      .then(snapshot => {\n        let userData = snapshot.val();\n        setRandomUserDBdata(userData);\n        fetchPost(route.params.userId)\n        checkIfFollowed()\n      });\n  }\n\n  const FollowProfile = async() => {\n    let userToFollow = route.params.userId\n    let userToFollowUserName = route.params.userId\n    let currentUser = firebase.auth().currentUser.uid;\n    //followers -adding new follower to profile which u picked\n    await firebase.database().ref('users/' + userToFollow).on('value', function (snapshot) {\n      //console.log(\"SnapShotVALUE:\",snapshot.val().followers);\n      followersArray = snapshot.val().followers\n      if (followersArray.includes(userDBdata.uid)) {\n        console.log(\"ure following that person\")\n        if (followed) {\n          console.log(\"remove follow\")\n          var index = followersArray.indexOf(userDBdata.uid);\n          if (index !== -1) {\n            followersArray.splice(index, 1);\n          }\n        }\n      } else {\n        followersArray.push(userDBdata.uid)     \n      }\n    });\n \n    await firebase.database().ref('users/' + userToFollow).update({\n      followers: followersArray\n    }).then(() => {\n      console.log(\"Followers data updated\")\n      //setCountFollowers(followersArray.length)\n      if(!followed)setAddNoti(true)      \n    });\n    //followed - add to current user followed person\n    //geting followed array\n    firebase.database().ref('users/' + currentUser).on('value', function (snapshot) {\n      //console.log(\"SnapShotVALUE:\",snapshot.val().followers);\n      followedArray = snapshot.val().followed\n      if (followedArray.includes(userToFollowUserName)) {\n        console.log(\"already in followed\")\n        if (followed) {\n          console.log(\"remove follow\")\n          var index = followedArray.indexOf(userToFollowUserName);\n          if (index !== -1) {\n            followedArray.splice(index, 1);\n          }\n        }\n      } else {\n        followedArray.push(userToFollowUserName)\n      }\n    });\n    //update followed array \n    firebase.database().ref('users/' + currentUser).update({\n      followed: followedArray\n    }).then(() => {\n      console.log(\"Followed users data updated\");\n      //setCountFollowed(followedArray.length)\n      if (followed) setFollowed(false)   \n    });\n\n \n  }\n  const checkIfFollowed = () => {\n    let currentUser = firebase.auth().currentUser.uid;\n    let userToFollow = route.params.userId\n\n    let userToFollowUserName = route.params.userId\n    firebase.database().ref('users/' + currentUser).on('value', function (snapshot) {\n\n      followedArray = snapshot.val().followed\n      if (followedArray.includes(userToFollowUserName)) {\n        console.log(\"check if : already in followed\")\n        setFollowed(true)\n      }\n    });\n  }\n  const count = () => {\n    let currentUser = firebase.auth().currentUser.uid;\n    if (route.params) {\n      let userToFollow = route.params.userId\n\n      firebase.database().ref('users/' + userToFollow).on('value', function (snapshot) {\n        countFollowedArr = snapshot.val().followed\n        countFollowersArr = snapshot.val().followers\n        setCountFollowed(countFollowedArr.length)\n        setCountFollowers(countFollowersArr.length)\n      });\n    } else {\n      firebase.database().ref('users/' + currentUser).on('value', function (snapshot) {\n        countFollowedArr = snapshot.val().followed\n        countFollowersArr = snapshot.val().followers\n        setCountFollowed(countFollowedArr.length)\n        setCountFollowers(countFollowersArr.length)\n      });\n    }\n  }\n\n  return (\n\n    <View style={styles.containerProfileScreen}>\n      {loaded ?\n        <SafeAreaView style={{ flex: 1, backgroundColor: '#fff' }}>\n\n          <View style={styles.headerProfileScreen}>\n            <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: \"center\", marginTop: -30 }}>\n              <Text style={{ fontWeight: \"bold\", fontSize: 22, marginLeft: 5 }}>{route.params ? userRandomDBdata.login : userDBdata.login}</Text>\n              <Ionicons name=\"ios-chevron-down-sharp\" size={24} color=\"black\" />\n            </View>\n\n            <View style={{ flexDirection: 'row', marginRight: 15, justifyContent: 'space-between', width: windowWidth / 4.5 }}>\n              <FontAwesome name=\"plus-square-o\" size={34} color=\"black\" style={{ marginRight: 5 }} />\n              <SimpleLineIcons name=\"menu\" size={28} color=\"black\" style={{ marginRight: 5 }} />\n            </View>\n          </View>\n\n          <ScrollView\n            style={styles.containerProfileScreen}\n            contentContainerStyle={{ justifyContent: \"center\", alignItems: 'center' }}\n            showsVerticalScrollIndicator={false}\n          >\n            <View style={{ backgroundColor: \"red\",width: windowWidth,}}>\n              <View style={{backgroundColor: \"#fff\"}}>\n                <View style={{ flexDirection: 'row', justifyContent: 'space-around', alignItems: 'center' }}>\n                  <View>\n                    {route.params ?\n\n                      <Image style={styles.imgProfileMax} source={{ uri: userRandomDBdata.photoURL }} />\n                      :\n                      <Image style={styles.imgProfileMax} source={{ uri: userDBdata.photoURL }} />\n                    }\n                  </View>\n                  <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                    <Text>{posts ? posts.length : 0}</Text>\n                    <Text>Posts</Text>\n                  </View>\n                  <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                    <Text>{countFollowers}</Text>\n                    <Text>Followers</Text>\n                  </View>\n                  <View style={{ justifyContent: 'center', alignItems: 'center' }}>\n                    <Text>{countFollowed}</Text>\n                    <Text>Followed</Text>\n                  </View>\n                </View>\n                <Text style={{ margin: 10, }}>{route.params ? userRandomDBdata.userBiogram : userDBdata.userBiogram}</Text>\n                <View style={{ justifyContent: \"center\", alignItems: \"center\" }}>\n                  {route.params ?\n                    <View style={{ flexDirection: 'row', justifyContent: 'space-around' }}>\n                      {followed\n                        ? <TouchableOpacity onPress={FollowProfile} style={{ ...styles.editFollow }}>\n                          <Text style={{ fontWeight:'bold', color: \"black\" }}>Following</Text>\n                        </TouchableOpacity>\n                        : <TouchableOpacity onPress={FollowProfile} style={{ ...styles.editFollow, backgroundColor: \"#458eff\" }}>\n                          <Text style={{ fontWeight:'bold', color: \"#ffffff\" }}>Follow</Text>\n                        </TouchableOpacity>\n                      }\n                      <TouchableOpacity onPress={sendMessage} style={styles.editFollow}>\n                        <Text style={{ fontWeight: 'bold'}}>Message</Text>\n                      </TouchableOpacity>\n                    </View>\n                    :\n                    <TouchableOpacity onPress={edit} style={styles.edit}>\n                      <Text style={{ fontWeight: 'bold'}}>Edit Profile</Text>\n                    </TouchableOpacity>\n                  }\n                </View>\n              </View>\n            </View >\n            <View>\n              <View style={styles.buttons}>\n                <TouchableOpacity onPress={viewGrid} style={styles.viewBut} >\n                  <MaterialCommunityIcons name=\"view-grid-outline\" size={33} color=\"black\" />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={viewProf} style={styles.viewBut}>\n                  <SimpleLineIcons name=\"user\" size={30} color=\"black\" />\n                </TouchableOpacity>\n              </View>\n              <View style={{ justifyContent: 'center', alignItems: 'center', width: windowWidth, height: windowHeight / 2 }}>\n                <ScrollView style={{ width: windowWidth }} nestedScrollEnabled\n                  bounces={false}>\n                  <View style={{ flexDirection: 'row' }}>\n                    <FlatList\n                      data={posts}\n                      numColumns={3}\n                      renderItem={({ item }) => <Img item={item} />}\n                      keyExtractor={(item, index) => index.toString()}\n                    />\n                  </View>\n                </ScrollView>\n              </View>\n\n            </View>\n          </ScrollView>\n        </SafeAreaView>\n        :\n        <View style={styles.loading}>\n          <ActivityIndicator animating={true} color={\"#458eff\"} size={'large'} />\n        </View>\n      }\n    </View>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}